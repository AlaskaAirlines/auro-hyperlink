import { html } from 'lit/static-html.js';
import { ifDefined } from 'lit/directives/if-defined.js';
import { classMap } from 'lit/directives/class-map.js';
import { LitElement, css } from 'lit';
import * as AuroLibraryRuntimeUtils from '@aurodesignsystem/auro-library/scripts/utils/runtimeUtils.mjs';
import AuroLibraryRuntimeUtils__default from '@aurodesignsystem/auro-library/scripts/utils/runtimeUtils.mjs';
import externalLink from '@alaskaairux/icons/dist/icons/interface/external-link-stroke.mjs';
import newWindow from '@alaskaairux/icons/dist/icons/interface/new-window-stroke.mjs';
import { AuroDependencyVersioning } from '@aurodesignsystem/auro-library/scripts/runtime/dependencyTagVersioning.mjs';
import { AuroIcon } from '@aurodesignsystem/auro-icon/src/auro-icon.js';

// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.


// build the component class
class ComponentBase extends LitElement {
  constructor() {
    super();

    this.download = false;
    this.relative = false;
    this.secondary = false;
    this.tertiary = false;
    this.ondark = false;
    this.small = false;

    /**
     * @private
     */
    this.defaultReferrerPolicy = 'strict-origin-when-cross-origin';

    /**
     * @private
     */
    this.ariaPressed = 'false';

    /**
     * @private
     */
    this.tabIsActive = 'false';

     /**
     * @private
     */
     this.runtimeUtils = new AuroLibraryRuntimeUtils__default();

    /*
      If the component requires a touch detection,
      please use this function to determine if a user is
      actively touching a device, versus detecting if
      the device is touch enables or a handheld device.

      Also uncomment the touch detection lib above
    */
    this.addEventListener('touchstart', function() {
      this.classList.add('is-touching');
    });
  }

  // function to define props used within the scope of this component
  static get properties() {
    return {
      href:             { type: String },
      rel:              { type: String },
      role:             { type: String },
      target:           { type: String },
      download:         { type: Boolean },
      relative:         { type: Boolean },
      secondary:        { type: Boolean },
      tertiary:         { type: Boolean },
      ondark:           { type: Boolean },
      type:             { type: String },
      fluid:            { type: Boolean },
      referrerpolicy:   { type: Boolean },
      small:            { type: Boolean }
    };
  }

  firstUpdated() {
    // Add the tag name as an attribute if it is different than the component name
    this.runtimeUtils.handleComponentTagRename(this, 'auro-hyperlink');
  }

  /**
   * Returns a safe URI based on the provided `href` and `relative` parameters.
   * If `href` is truthy, it generates a safe URL using the `safeUrl` function.
   * Otherwise, it returns an empty string.
   *
   * @example
   * // Assuming this.href = 'http://example.com' and this.relative = false
   * this.safeUri; // Returns 'http://example.com'
   *
   * @example
   * // Assuming this.href = '' or this.href = null
   * this.safeUri; // Returns ''
   *
   * @returns {string} The safe URI or an empty string.
   */
  get safeUri() {
    return this.href ? this.safeUrl(this.href, this.relative) : '';
  }

  /**
   * Checks whether the provided URI (if available) includes the 'http' protocol.
   * If the URI is truthy, it examines whether it contains 'http'.
   * Otherwise, it returns false.
   *
   * @example
   * // Assuming this.href = 'http://example.com'
   * this.includesDomain; // Returns true
   *
   * @example
   * // Assuming this.href = '/path/to/file'
   * this.includesDomain; // Returns false
   *
   * @example
   * // Assuming this.href = '' or this.href = null
   * this.includesDomain; // Returns false
   *
   * @private
   * @returns {boolean} True if the URI includes 'http', false otherwise.
   */
  get includesDomain() {
    return this.href ? this.safeUri.includes('http') : false;
  }

  /**
   * Generates a safe URL based on the provided `href` and `relative` parameters.
   * If `href` is falsy, it returns `undefined`.
   *
   * @example
   * // Assuming href = 'http://example.com' and relative = false
   * this.safeUrl(href, relative); // Returns 'https://example.com'
   *
   * @example
   * // Assuming href = '/path/to/file' and relative = true
   * this.safeUrl(href, relative); // Returns '/path/to/file'
   *
   * @example
   * // Assuming href = 'javascript:alert("Hello")'
   * this.safeUrl(href, relative); // Returns undefined
   *
   * @private
   * @param {string} href - The original URL.
   * @param {boolean} relative - Indicates whether the URL is relative.
   * @returns {string|undefined} The safe URL or `undefined`.
   */
  safeUrl(href, relative) {
    if (!href) {
      return undefined;
    }

    const url = new URL(href, 'https://www.alaskaair.com');

    switch (url.protocol) {
      case 'tel:':
      case 'sms:':
      case 'mailto:':
        return href;

      // Specifically want to render NO shadowDOM for the following refs
      case 'javascript:':
      case 'data:':
      case 'vbscript:':
        return undefined;

      default:
        if (!relative) {
          url.protocol = 'https:';
          return url.href;
        } else {
          return href.replace(/^[^:]+:/, "");
        }
    }
  }

  /**
   * Generates an HTML element containing an SVG icon based on the provided `svgContent`.
   *
   * @example
   * // Assuming svgContent = '<svg><path d="..."/></svg>'
   * this.generateIconHtml(svgContent); // Returns HTML element containing the SVG icon
   *
   * @private
   * @param {string} svgContent - The SVG content to be embedded.
   * @returns {Element} The HTML element containing the SVG icon.
   */
  generateIconHtml(svgContent) {
    const dom = new DOMParser().parseFromString(svgContent, 'text/html');
    const svg = dom.body.firstChild;

    svg.setAttribute('slot', 'svg');

    return html`<${this.iconTag} customColor customSize customSvg part="targetIcon">${svg}</${this.iconTag}>`;
  }

  /**
   * Generates an icon HTML element based on the target attribute.
   *
   * @example
   * // Assuming target = '_blank' and this.safeUri = 'http://alaskaair.com'
   * this.targetIcon(target); // Returns HTML element containing the new window icon
   *
   * @example
   * // Assuming target = '_blank' and this.safeUri = 'http://external.com'
   * this.targetIcon(target); // Returns HTML element containing the external link icon
   *
   * @example
   * // Assuming target = '_self' or this.safeUri = '/relative/path'
   * this.targetIcon(target); // Returns undefined
   *
   * @private
   * @param {string} target - The target attribute of the anchor element.
   * @returns {HTMLElement|undefined} The HTML element containing the icon, or undefined if no icon is generated.
   */
  targetIcon(target) {

    /**
     * Checks if a URL's domain is from the 'alaskaair.com' domain or its subdomains.
     * @param {string} url - The URL to check.
     * @returns {boolean} Returns true if the URL's domain is 'alaskaair.com' or one of its subdomains, otherwise false.
     */
    const isAlaskaAirDomain = (url) => {
      const urlObject = new URL(url);
      return urlObject.hostname.endsWith('.alaskaair.com');
    };

    // If target is '_blank' and the URL's domain is 'alaskaair.com' or one of its subdomains, return icon for new window
    if (target === '_blank' && isAlaskaAirDomain(this.safeUri)) {
      return this.generateIconHtml(newWindow.svg);
    } else if (target === '_blank' && !isAlaskaAirDomain(this.safeUri) && this.includesDomain) {
      // If target is '_blank' and the URL does not belong to 'alaskaair.com' or its subdomains but contains a domain, return icon for external link
      return this.generateIconHtml(externalLink.svg);
    }

    return undefined;
  }

  /**
   * Returns the state of a tab as a string.
   *
   * @example
   * // Assuming tabIsActive = true
   * this.getTabState(tabIsActive); // Returns 'is-active'
   *
   * @example
   * // Assuming tabIsActive = false
   * this.getTabState(tabIsActive); // Returns ''
   *
   * @private
   * @param {boolean} tabIsActive - Indicates whether the tab is active.
   * @returns {string} 'is-active' if the tab is active, otherwise an empty string.
   */
  getTabState(tabIsActive) {
    return tabIsActive === true ? "is-active" : '';
  }

  /**
   * Gets the rel attribute value based on target and rel values.
   *
   * @example
   * // Assuming target = '_blank', rel = 'noFollow', and this.safeUri = 'http://alaskaair.com'
   * this.getRelType(target, rel); // Returns 'noFollow'
   *
   * @example
   * // Assuming target = '_blank', rel = undefined, this.safeUri = 'http://alaskaair.com', and this.includesDomain = true
   * this.getRelType(target, rel); // Returns undefined
   *
   * @example
   * // Assuming target = '_blank', rel = undefined, this.safeUri = 'http://external.com', this.includesDomain = true, and this.referrerpolicy = undefined
   * this.getRelType(target, rel); // Returns 'noOpener noReferrer'
   *
   * @example
   * // Assuming target = '_blank', rel = undefined, this.safeUri = 'http://external.com', this.includesDomain = true, and this.referrerpolicy = 'no-referrer'
   * this.getRelType(target, rel); // Returns 'external'
   *
   * @private
   * @param {string} target - The target attribute of the anchor element.
   * @param {string} rel - The rel attribute of the anchor element.
   * @returns {string|undefined} The rel attribute value or undefined if not applicable.
   */
  getRelType(target, rel) {

    if (rel) {
      return rel;
    }

    if (target === '_blank' && this.safeUri.includes('alaskaair.com')) {
      return rel;
    }

    if (target === '_blank' && this.includesDomain && !this.rel && !this.referrerpolicy) {
      return 'noOpener noReferrer';
    }

    if (target === '_blank' && this.referrerpolicy) {
      return 'external';
    }

    return undefined;
  }

  /**
   * Sets the ARIA pressed state based on user interactions.
   *
   * @example
   * // Assuming ariaPressed = false and user performs a mousedown event
   * this.ariaPressedState(ariaPressed); // Returns true
   *
   * @example
   * // Assuming ariaPressed = true and user performs a mouseup event
   * this.ariaPressedState(ariaPressed); // Returns false
   *
   * @example
   * // Assuming ariaPressed = false and user performs a keydown event with 'Enter' or 'Space'
   * this.ariaPressedState(ariaPressed); // Returns true
   *
   * @example
   * // Assuming ariaPressed = true and user performs a keyup event
   * this.ariaPressedState(ariaPressed); // Returns false
   *
   * @private
   * @param {boolean} ariaPressed - The initial value of the ARIA pressed state.
   * @returns {boolean} The updated ARIA pressed state.
   */
  ariaPressedState(ariaPressed) {
    const ariaToggle = function (event) {
      const ariaPressedNode = this.shadowRoot.querySelector('[aria-pressed]');
      ariaPressedNode.setAttribute("aria-pressed", 'false');

      if (event.type === 'mousedown') {
        ariaPressedNode.ariaPressed = true;
      } else {
        ariaPressedNode.ariaPressed = false;
      }

      if (event.type === 'keydown') {
        if (event.code === 'Enter' || event.code === 'Space') {
          ariaPressedNode.ariaPressed = true;
        } else {
          ariaPressedNode.ariaPressed = false;
        }
      }
    };

    // Add event listeners
    this.addEventListener('mousedown', ariaToggle);
    this.addEventListener('mouseup', ariaToggle);
    this.addEventListener('keydown', ariaToggle);
    this.addEventListener('keyup', ariaToggle);

    return ariaPressed;
  }

  // function renders HTML and CSS into the scope of the component
  render() {
    return html`
      ${this.getMarkup()}
    `;
  }
}

var iconVersion = '5.0.0';

var styleCss = css`*,*:before,*:after{box-sizing:border-box}@media(prefers-reduced-motion: reduce){*,*:before,*:after{animation-duration:.01ms !important;animation-iteration-count:1 !important;transition-duration:.01ms !important}}*:focus-visible{outline:0}*:focus-visible{outline:0}:focus:not(:focus-visible){outline:3px solid transparent}:host{display:inline-block}:host([type=nav]) .hyperlink:focus{text-decoration:underline}:host([fluid][type=cta]),:host([fluid=true][type=cta]){width:100%}:host([fluid][type=cta]) .hyperlink--cta,:host([fluid=true][type=cta]) .hyperlink--cta{width:100%}.hyperlink{transition:all .15s ease;text-decoration:underline;white-space:nowrap}@media(hover: hover){.hyperlink:hover{text-decoration:none}.hyperlink--nav:hover{text-decoration:underline}}.hyperlink--button{display:inline-block;padding:0 var(--ds-size-200, 1rem);text-decoration:none;color:var(--ds-color-text-link-default, #0074c8);border:1px solid transparent;line-height:var(--ds-unitless-scale-300, 3)}@media(hover: hover){.hyperlink--button:hover{cursor:pointer;text-decoration:underline;color:var(--ds-color-ui-hover-default, #054687)}}.hyperlink--nav{display:block;text-decoration:none}.hyperlink--nav:focus-visible{outline-style:solid;outline-width:var(--ds-size-50, 0.25rem);outline-offset:unset}.hyperlink--cta{border-style:solid;border-width:1px;border-radius:var(--ds-border-radius, 0.375rem);font-family:var(--ds-font-family-default, "AS Circular", Helvetica Neue, Arial, sans-serif);font-size:var(--ds-text-body-size-default, 1rem);font-weight:var(--ds-text-body-default-weight, 500);min-height:var(--ds-size-600, 3rem);max-height:var(--ds-size-600, 3rem);text-align:center;vertical-align:middle;display:block;padding:0 var(--ds-size-200, 1rem);text-decoration:none;color:var(--ds-color-text-link-default, #0074c8);border:1px solid transparent;line-height:var(--ds-unitless-scale-300, 3)}@media(hover: hover){.hyperlink--cta:hover{cursor:pointer;text-decoration:underline;color:var(--ds-color-ui-hover-default, #054687)}}.hyperlink--cta:active{transform:scale(0.95)}.hyperlink--cta:focus-visible{outline-style:solid;outline-width:var(--ds-size-50, 0.25rem);outline-offset:calc(-1*(var(--ds-size-50, 0.25rem) + var(--ds-size-25, 0.125rem)))}.hyperlink--cta.hyperlink--secondary{outline-offset:calc(-1*(var(--ds-size-50, 0.25rem)))}.hyperlink--cta.hyperlink--tertiary{outline-offset:calc(-1*(var(--ds-size-50, 0.25rem)))}@media(hover: hover){.hyperlink--cta:hover{text-decoration:none}}@media screen and (min-width: 576px){.hyperlink--cta{display:inline-block;min-width:8.75rem;width:auto;padding:0 var(--ds-size-300, 1.5rem)}}.hyperlink--cta.hyperlink--secondary,.hyperlink--cta.hyperlink--tertiary,.hyperlink--cta.hyperlink--ondark{border-style:solid;border-width:1px}:host([small][type=cta]) .hyperlink--cta,:host([small=true][type=cta]) .hyperlink--cta{display:flex;min-width:unset;min-height:2.25rem;max-height:2.25rem;padding:var(--ds-size-100, 0.5rem) var(--ds-size-200, 1rem);line-height:var(--ds-unitless-scale-140, 1.4);font-size:var(--ds-text-body-size-sm, 0.875rem)}:host([small][type=cta]) .hyperlink--cta svg,:host([small=true][type=cta]) .hyperlink--cta svg{top:unset}[auro-icon]{height:1rem;width:1rem;margin-left:var(--ds-size-25, 0.125rem)}`;

var colorCss = css`:host(:not([type=cta]):not([type=nav]):not([ondark])) a{color:var(--ds-auro-hyperlink-default-color-default);background-color:var(--ds-auro-hyperlink-default-container-color-default);outline-color:var(--ds-auro-hyperlink-default-outline-color-default);border-color:var(--ds-auro-hyperlink-default-border-color-default)}:host(:not([type=cta]):not([type=nav]):not([ondark])) a:visited{color:var(--ds-auro-hyperlink-visited-color-default);background-color:var(--ds-auro-hyperlink-visited-container-color-default);outline-color:var(--ds-auro-hyperlink-visited-outline-color-default);border-color:var(--ds-auro-hyperlink-visited-border-color-default)}:host(:not([type=cta]):not([type=nav]):not([ondark])) a:focus-visible{color:var(--ds-auro-hyperlink-focus-color-default);background-color:var(--ds-auro-hyperlink-focus-container-color-default);outline-color:var(--ds-auro-hyperlink-focus-outline-color-default);border-color:var(--ds-auro-hyperlink-focus-border-color-default)}@media(hover: hover){:host(:not([type=cta]):not([type=nav]):not([ondark])) a:hover{color:var(--ds-auro-hyperlink-hover-color-default);background-color:var(--ds-auro-hyperlink-hover-container-color-default);outline-color:var(--ds-auro-hyperlink-hover-outline-color-default);border-color:var(--ds-auro-hyperlink-hover-border-color-default)}}:host(:not([type=cta]):not([type=nav])[ondark]) a{color:var(--ds-auro-hyperlink-default-color-inverse);background-color:var(--ds-auro-hyperlink-default-container-color-inverse);outline-color:var(--ds-auro-hyperlink-default-outline-color-inverse);border-color:var(--ds-auro-hyperlink-default-border-color-inverse)}:host(:not([type=cta]):not([type=nav])[ondark]) a:visited{color:var(--ds-auro-hyperlink-visited-color-inverse);background-color:var(--ds-auro-hyperlink-visited-container-color-inverse);outline-color:var(--ds-auro-hyperlink-visited-outline-color-inverse);border-color:var(--ds-auro-hyperlink-visited-border-color-inverse)}:host(:not([type=cta]):not([type=nav])[ondark]) a:focus-visible{color:var(--ds-auro-hyperlink-focus-color-inverse);background-color:var(--ds-auro-hyperlink-focus-container-color-inverse);outline-color:var(--ds-auro-hyperlink-focus-outline-color-inverse);border-color:var(--ds-auro-hyperlink-focus-border-color-inverse)}@media(hover: hover){:host(:not([type=cta]):not([type=nav])[ondark]) a:hover{color:var(--ds-auro-hyperlink-hover-color-inverse);background-color:var(--ds-auro-hyperlink-hover-container-color-inverse);outline-color:var(--ds-auro-hyperlink-hover-outline-color-inverse);border-color:var(--ds-auro-hyperlink-hover-border-color-inverse)}}:host([type=nav]:not([ondark])) a{color:var(--ds-auro-hyperlink-nav-default-color-default);background-color:var(--ds-auro-hyperlink-nav-default-container-color-default);outline-color:var(--ds-auro-hyperlink-nav-default-outline-color-default);border-color:var(--ds-auro-hyperlink-nav-default-border-color-default)}:host([type=nav]:not([ondark])) a:visited{color:var(--ds-auro-hyperlink-nav-visited-color-default);background-color:var(--ds-auro-hyperlink-nav-visited-container-color-default);outline-color:var(--ds-auro-hyperlink-nav-visited-outline-color-default);border-color:var(--ds-auro-hyperlink-nav-visited-border-color-default)}:host([type=nav]:not([ondark])) a:focus-visible{color:var(--ds-auro-hyperlink-nav-focus-color-default);background-color:var(--ds-auro-hyperlink-nav-focus-container-color-default);outline-color:var(--ds-auro-hyperlink-nav-focus-outline-color-default);border-color:var(--ds-auro-hyperlink-nav-focus-border-color-default)}@media(hover: hover){:host([type=nav]:not([ondark])) a:hover{color:var(--ds-auro-hyperlink-nav-hover-color-default);background-color:var(--ds-auro-hyperlink-nav-hover-container-color-default);outline-color:var(--ds-auro-hyperlink-nav-hover-outline-color-default);border-color:var(--ds-auro-hyperlink-nav-hover-border-color-default)}}:host([type=nav][ondark]) a{color:var(--ds-auro-hyperlink-nav-default-color-inverse);background-color:var(--ds-auro-hyperlink-nav-default-container-color-inverse);outline-color:var(--ds-auro-hyperlink-nav-default-outline-color-inverse);border-color:var(--ds-auro-hyperlink-nav-default-border-color-inverse)}:host([type=nav][ondark]) a:visited{color:var(--ds-auro-hyperlink-nav-visited-color-inverse);background-color:var(--ds-auro-hyperlink-nav-visited-container-color-inverse);outline-color:var(--ds-auro-hyperlink-nav-visited-outline-color-inverse);border-color:var(--ds-auro-hyperlink-nav-visited-border-color-inverse)}:host([type=nav][ondark]) a:focus-visible{color:var(--ds-auro-hyperlink-nav-focus-color-inverse);background-color:var(--ds-auro-hyperlink-nav-focus-container-color-inverse);outline-color:var(--ds-auro-hyperlink-nav-focus-outline-color-inverse);border-color:var(--ds-auro-hyperlink-nav-focus-border-color-inverse)}@media(hover: hover){:host([type=nav][ondark]) a:hover{color:var(--ds-auro-hyperlink-nav-hover-color-inverse);background-color:var(--ds-auro-hyperlink-nav-hover-container-color-inverse);outline-color:var(--ds-auro-hyperlink-nav-hover-outline-color-inverse);border-color:var(--ds-auro-hyperlink-nav-hover-border-color-inverse)}}:host([type=cta]:not([ondark]):not([secondary]):not([tertiary])) a{color:var(--ds-auro-hyperlink-cta-default-color-default);background-color:var(--ds-auro-hyperlink-cta-default-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-default-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-default-border-color-default)}:host([type=cta]:not([ondark]):not([secondary]):not([tertiary])) a:visited{color:var(--ds-auro-hyperlink-cta-visited-color-default);background-color:var(--ds-auro-hyperlink-cta-visited-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-visited-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-visited-border-color-default)}:host([type=cta]:not([ondark]):not([secondary]):not([tertiary])) a:focus-visible{color:var(--ds-auro-hyperlink-cta-focus-color-default);background-color:var(--ds-auro-hyperlink-cta-focus-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-focus-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-focus-border-color-default)}@media(hover: hover){:host([type=cta]:not([ondark]):not([secondary]):not([tertiary])) a:hover{color:var(--ds-auro-hyperlink-cta-hover-color-default);background-color:var(--ds-auro-hyperlink-cta-hover-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-hover-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-hover-border-color-default)}}:host([type=cta][ondark]:not([secondary]):not([tertiary])) a{color:var(--ds-auro-hyperlink-cta-default-color-inverse);background-color:var(--ds-auro-hyperlink-cta-default-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-default-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-default-border-color-inverse)}:host([type=cta][ondark]:not([secondary]):not([tertiary])) a:visited{color:var(--ds-auro-hyperlink-cta-visited-color-inverse);background-color:var(--ds-auro-hyperlink-cta-visited-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-visited-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-visited-border-color-inverse)}:host([type=cta][ondark]:not([secondary]):not([tertiary])) a:focus-visible{color:var(--ds-auro-hyperlink-cta-focus-color-inverse);background-color:var(--ds-auro-hyperlink-cta-focus-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-focus-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-focus-border-color-inverse)}@media(hover: hover){:host([type=cta][ondark]:not([secondary]):not([tertiary])) a:hover{color:var(--ds-auro-hyperlink-cta-hover-color-inverse);background-color:var(--ds-auro-hyperlink-cta-hover-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-hover-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-hover-border-color-inverse)}}:host([type=cta][secondary]:not([ondark])) a{color:var(--ds-auro-hyperlink-cta-secondary-default-color-default);background-color:var(--ds-auro-hyperlink-cta-secondary-default-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-secondary-default-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-secondary-default-border-color-default)}:host([type=cta][secondary]:not([ondark])) a:visited{color:var(--ds-auro-hyperlink-cta-secondary-visited-color-default);background-color:var(--ds-auro-hyperlink-cta-secondary-visited-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-secondary-visited-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-secondary-visited-border-color-default)}:host([type=cta][secondary]:not([ondark])) a:focus-visible{color:var(--ds-auro-hyperlink-cta-secondary-focus-color-default);background-color:var(--ds-auro-hyperlink-cta-secondary-focus-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-secondary-focus-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-secondary-focus-border-color-default)}@media(hover: hover){:host([type=cta][secondary]:not([ondark])) a:hover{color:var(--ds-auro-hyperlink-cta-secondary-hover-color-default);background-color:var(--ds-auro-hyperlink-cta-secondary-hover-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-secondary-hover-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-secondary-hover-border-color-default)}}:host([type=cta][secondary][ondark]) a{color:var(--ds-auro-hyperlink-cta-secondary-default-color-inverse);background-color:var(--ds-auro-hyperlink-cta-secondary-default-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-secondary-default-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-secondary-default-border-color-inverse)}:host([type=cta][secondary][ondark]) a:visited{color:var(--ds-auro-hyperlink-cta-secondary-visited-color-inverse);background-color:var(--ds-auro-hyperlink-cta-secondary-visited-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-secondary-visited-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-secondary-visited-border-color-inverse)}:host([type=cta][secondary][ondark]) a:focus-visible{color:var(--ds-auro-hyperlink-cta-secondary-focus-color-inverse);background-color:var(--ds-auro-hyperlink-cta-secondary-focus-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-secondary-focus-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-secondary-focus-border-color-inverse)}@media(hover: hover){:host([type=cta][secondary][ondark]) a:hover{color:var(--ds-auro-hyperlink-cta-secondary-hover-color-inverse);background-color:var(--ds-auro-hyperlink-cta-secondary-hover-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-secondary-hover-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-secondary-hover-border-color-inverse)}}:host([type=cta][tertiary]:not([ondark])) a{color:var(--ds-auro-hyperlink-cta-tertiary-default-color-default);background-color:var(--ds-auro-hyperlink-cta-tertiary-default-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-tertiary-default-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-tertiary-default-border-color-default)}:host([type=cta][tertiary]:not([ondark])) a:visited{color:var(--ds-auro-hyperlink-cta-tertiary-visited-color-default);background-color:var(--ds-auro-hyperlink-cta-tertiary-visited-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-tertiary-visited-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-tertiary-visited-border-color-default)}:host([type=cta][tertiary]:not([ondark])) a:focus-visible{color:var(--ds-auro-hyperlink-cta-tertiary-focus-color-default);background-color:var(--ds-auro-hyperlink-cta-tertiary-focus-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-tertiary-focus-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-tertiary-focus-border-color-default)}@media(hover: hover){:host([type=cta][tertiary]:not([ondark])) a:hover{color:var(--ds-auro-hyperlink-cta-tertiary-hover-color-default);background-color:var(--ds-auro-hyperlink-cta-tertiary-hover-container-color-default);outline-color:var(--ds-auro-hyperlink-cta-tertiary-hover-outline-color-default);border-color:var(--ds-auro-hyperlink-cta-tertiary-hover-border-color-default)}}:host([type=cta][tertiary][ondark]) a{color:var(--ds-auro-hyperlink-cta-tertiary-default-color-inverse);background-color:var(--ds-auro-hyperlink-cta-tertiary-default-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-tertiary-default-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-tertiary-default-border-color-inverse)}:host([type=cta][tertiary][ondark]) a:visited{color:var(--ds-auro-hyperlink-cta-tertiary-visited-color-inverse);background-color:var(--ds-auro-hyperlink-cta-tertiary-visited-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-tertiary-visited-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-tertiary-visited-border-color-inverse)}:host([type=cta][tertiary][ondark]) a:focus-visible{color:var(--ds-auro-hyperlink-cta-tertiary-focus-color-inverse);background-color:var(--ds-auro-hyperlink-cta-tertiary-focus-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-tertiary-focus-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-tertiary-focus-border-color-inverse)}@media(hover: hover){:host([type=cta][tertiary][ondark]) a:hover{color:var(--ds-auro-hyperlink-cta-tertiary-hover-color-inverse);background-color:var(--ds-auro-hyperlink-cta-tertiary-hover-container-color-inverse);outline-color:var(--ds-auro-hyperlink-cta-tertiary-hover-outline-color-inverse);border-color:var(--ds-auro-hyperlink-cta-tertiary-hover-border-color-inverse)}}`;

var tokensCss = css`:host{--ds-auro-hyperlink-default-color-default: var(--ds-color-text-ui-default-default, #2c67b5);--ds-auro-hyperlink-default-container-color-default: transparent;--ds-auro-hyperlink-default-outline-color-default: transparent;--ds-auro-hyperlink-default-border-color-default: transparent;--ds-auro-hyperlink-visited-color-default: var(--ds-color-text-ui-default-default, #2c67b5);--ds-auro-hyperlink-visited-container-color-default: transparent;--ds-auro-hyperlink-visited-outline-color-default: transparent;--ds-auro-hyperlink-visited-border-color-default: transparent;--ds-auro-hyperlink-focus-color-default: var(--ds-color-text-ui-focus-default, #2c67b5);--ds-auro-hyperlink-focus-container-color-default: transparent;--ds-auro-hyperlink-focus-outline-color-default: transparent;--ds-auro-hyperlink-focus-border-color-default: transparent;--ds-auro-hyperlink-hover-color-default: var(--ds-color-text-ui-hover-default, #193d73);--ds-auro-hyperlink-hover-container-color-default: transparent;--ds-auro-hyperlink-hover-outline-color-default: transparent;--ds-auro-hyperlink-hover-border-color-default: transparent;--ds-auro-hyperlink-default-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-default-container-color-inverse: transparent;--ds-auro-hyperlink-default-outline-color-inverse: transparent;--ds-auro-hyperlink-default-border-color-inverse: transparent;--ds-auro-hyperlink-visited-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-visited-container-color-inverse: transparent;--ds-auro-hyperlink-visited-outline-color-inverse: transparent;--ds-auro-hyperlink-visited-border-color-inverse: transparent;--ds-auro-hyperlink-focus-color-inverse: var(--ds-color-text-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-focus-container-color-inverse: transparent;--ds-auro-hyperlink-focus-outline-color-inverse: transparent;--ds-auro-hyperlink-focus-border-color-inverse: transparent;--ds-auro-hyperlink-hover-color-inverse: var(--ds-color-text-ui-hover-inverse, #a8e9f7);--ds-auro-hyperlink-hover-container-color-inverse: transparent;--ds-auro-hyperlink-hover-outline-color-inverse: transparent;--ds-auro-hyperlink-hover-border-color-inverse: transparent;--ds-auro-hyperlink-nav-default-color-default: var(--ds-color-text-ui-default-default, #2c67b5);--ds-auro-hyperlink-nav-default-container-color-default: transparent;--ds-auro-hyperlink-nav-default-outline-color-default: transparent;--ds-auro-hyperlink-nav-default-border-color-default: transparent;--ds-auro-hyperlink-nav-visited-color-default: var(--ds-color-text-ui-default-default, #2c67b5);--ds-auro-hyperlink-nav-visited-container-color-default: transparent;--ds-auro-hyperlink-nav-visited-outline-color-default: transparent;--ds-auro-hyperlink-nav-visited-border-color-default: transparent;--ds-auro-hyperlink-nav-focus-color-default: var(--ds-color-text-primary-inverse, #ffffff);--ds-auro-hyperlink-nav-focus-container-color-default: var(--ds-color-container-ui-primary-default-default, #2c67b5);--ds-auro-hyperlink-nav-focus-outline-color-default: var(--ds-color-container-ui-primary-default-default, #2c67b5);--ds-auro-hyperlink-nav-focus-border-color-default: var(--ds-color-container-ui-primary-default-default, #2c67b5);--ds-auro-hyperlink-nav-hover-color-default: var(--ds-color-text-ui-hover-default, #193d73);--ds-auro-hyperlink-nav-hover-container-color-default: transparent;--ds-auro-hyperlink-nav-hover-outline-color-default: transparent;--ds-auro-hyperlink-nav-hover-border-color-default: transparent;--ds-auro-hyperlink-nav-default-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-nav-default-container-color-inverse: transparent;--ds-auro-hyperlink-nav-default-outline-color-inverse: transparent;--ds-auro-hyperlink-nav-default-border-color-inverse: transparent;--ds-auro-hyperlink-nav-visited-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-nav-visited-container-color-inverse: transparent;--ds-auro-hyperlink-nav-visited-outline-color-inverse: transparent;--ds-auro-hyperlink-nav-visited-border-color-inverse: transparent;--ds-auro-hyperlink-nav-focus-color-inverse: var(--ds-color-text-primary-inverse, #ffffff);--ds-auro-hyperlink-nav-focus-container-color-inverse: var(--ds-color-container-ui-primary-focus-inverse, #56bbde);--ds-auro-hyperlink-nav-focus-outline-color-inverse: var(--ds-color-border-ui-default-inverse, #56bbde);--ds-auro-hyperlink-nav-focus-border-color-inverse: var(--ds-color-border-ui-default-inverse, #56bbde);--ds-auro-hyperlink-nav-hover-color-inverse: var(--ds-color-text-ui-hover-inverse, #a8e9f7);--ds-auro-hyperlink-nav-hover-container-color-inverse: transparent;--ds-auro-hyperlink-nav-hover-outline-color-inverse: transparent;--ds-auro-hyperlink-nav-hover-border-color-inverse: transparent;--ds-auro-hyperlink-cta-default-color-default: var(--ds-color-text-primary-inverse, #ffffff);--ds-auro-hyperlink-cta-default-container-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-default-outline-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-default-border-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-visited-color-default: var(--ds-color-text-primary-inverse, #ffffff);--ds-auro-hyperlink-cta-visited-container-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-visited-outline-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-visited-border-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-focus-color-default: var(--ds-color-text-primary-inverse, #ffffff);--ds-auro-hyperlink-cta-focus-container-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-focus-outline-color-default: var(--ds-color-container-ui-secondary-default-default, #ffffff);--ds-auro-hyperlink-cta-focus-border-color-default: var(--ds-color-border-ui-focus-default, #2c67b5);--ds-auro-hyperlink-cta-hover-color-default: var(--ds-color-text-primary-inverse, #ffffff);--ds-auro-hyperlink-cta-hover-container-color-default: var(--ds-color-container-ui-primary-hover-default, #193d73);--ds-auro-hyperlink-cta-hover-outline-color-default: var(--ds-color-border-ui-hover-default, #193d73);--ds-auro-hyperlink-cta-hover-border-color-default: var(--ds-color-border-ui-hover-default, #193d73);--ds-auro-hyperlink-cta-default-color-inverse: var(--ds-color-text-primary-default, #2a2a2a);--ds-auro-hyperlink-cta-default-container-color-inverse: var(--ds-color-ui-default-inverse, #00cff0);--ds-auro-hyperlink-cta-default-outline-color-inverse: var(--ds-color-ui-default-inverse, #00cff0);--ds-auro-hyperlink-cta-default-border-color-inverse: var(--ds-color-ui-default-inverse, #00cff0);--ds-auro-hyperlink-cta-visited-color-inverse: var(--ds-color-text-primary-default, #2a2a2a);--ds-auro-hyperlink-cta-visited-container-color-inverse: var(--ds-color-ui-default-inverse, #00cff0);--ds-auro-hyperlink-cta-visited-outline-color-inverse: var(--ds-color-ui-default-inverse, #00cff0);--ds-auro-hyperlink-cta-visited-border-color-inverse: var(--ds-color-ui-default-inverse, #00cff0);--ds-auro-hyperlink-cta-focus-color-inverse: var(--ds-color-text-primary-default, #2a2a2a);--ds-auro-hyperlink-cta-focus-container-color-inverse: var(--ds-color-ui-default-inverse, #00cff0);--ds-auro-hyperlink-cta-focus-outline-color-inverse: var(--ds-color-container-ui-secondary-default-default, #ffffff);--ds-auro-hyperlink-cta-focus-border-color-inverse: var(--ds-color-border-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-cta-hover-color-inverse: var(--ds-color-text-primary-default, #2a2a2a);--ds-auro-hyperlink-cta-hover-container-color-inverse: var(--ds-color-container-ui-primary-hover-inverse, #a8e9f7);--ds-auro-hyperlink-cta-hover-outline-color-inverse: var(--ds-color-border-ui-hover-inverse, #a8e9f7);--ds-auro-hyperlink-cta-hover-border-color-inverse: var(--ds-color-border-ui-hover-inverse, #a8e9f7);--ds-auro-hyperlink-cta-secondary-default-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-secondary-default-container-color-default: var(--ds-color-background-lightest, #ffffff);--ds-auro-hyperlink-cta-secondary-default-outline-color-default: var(--ds-color-text-link-default, #0074c8);--ds-auro-hyperlink-cta-secondary-default-border-color-default: var(--ds-color-text-link-default, #0074c8);--ds-auro-hyperlink-cta-secondary-visited-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-secondary-visited-container-color-default: var(--ds-color-background-lightest, #ffffff);--ds-auro-hyperlink-cta-secondary-visited-outline-color-default: var(--ds-color-text-link-default, #0074c8);--ds-auro-hyperlink-cta-secondary-visited-border-color-default: var(--ds-color-text-link-default, #0074c8);--ds-auro-hyperlink-cta-secondary-focus-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-secondary-focus-container-color-default: var(--ds-color-container-ui-secondary-default-inverse, rgba(255, 255, 255, 0.03));--ds-auro-hyperlink-cta-secondary-focus-outline-color-default: var(--ds-color-border-ui-focus-default, #2c67b5);--ds-auro-hyperlink-cta-secondary-focus-border-color-default: var(--ds-color-border-ui-focus-default, #2c67b5);--ds-auro-hyperlink-cta-secondary-hover-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-secondary-hover-container-color-default: var(--ds-color-container-ui-tertiary-hover-default, rgba(0, 0, 0, 0.12));--ds-auro-hyperlink-cta-secondary-hover-outline-color-default: var(--ds-color-border-ui-hover-default, #193d73);--ds-auro-hyperlink-cta-secondary-hover-border-color-default: var(--ds-color-border-ui-hover-default, #193d73);--ds-auro-hyperlink-cta-secondary-default-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-default-container-color-inverse: var(--ds-color-container-ui-secondary-default-inverse, rgba(255, 255, 255, 0.03));--ds-auro-hyperlink-cta-secondary-default-outline-color-inverse: var(--ds-color-border-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-default-border-color-inverse: var(--ds-color-border-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-visited-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-visited-container-color-inverse: var(--ds-color-container-ui-secondary-default-inverse, rgba(255, 255, 255, 0.03));--ds-auro-hyperlink-cta-secondary-visited-outline-color-inverse: var(--ds-color-border-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-visited-border-color-inverse: var(--ds-color-border-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-focus-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-focus-container-color-inverse: var(--ds-color-container-ui-secondary-default-inverse, rgba(255, 255, 255, 0.03));--ds-auro-hyperlink-cta-secondary-focus-outline-color-inverse: var(--ds-color-border-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-focus-border-color-inverse: var(--ds-color-border-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-cta-secondary-hover-color-inverse: var(--ds-color-text-ui-hover-inverse, #a8e9f7);--ds-auro-hyperlink-cta-secondary-hover-container-color-inverse: var(--ds-color-container-ui-secondary-hover-inverse, rgba(255, 255, 255, 0.12));--ds-auro-hyperlink-cta-secondary-hover-outline-color-inverse: var(--ds-color-border-ui-hover-inverse, #a8e9f7);--ds-auro-hyperlink-cta-secondary-hover-border-color-inverse: var(--ds-color-border-ui-hover-inverse, #a8e9f7);--ds-auro-hyperlink-cta-tertiary-default-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-tertiary-default-container-color-default: var(--ds-color-container-tertiary-default, rgba(0, 0, 0, 0.03));--ds-auro-hyperlink-cta-tertiary-default-outline-color-default: transparent;--ds-auro-hyperlink-cta-tertiary-default-border-color-default: transparent;--ds-auro-hyperlink-cta-tertiary-visited-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-tertiary-visited-container-color-default: var(--ds-color-container-tertiary-default, rgba(0, 0, 0, 0.03));--ds-auro-hyperlink-cta-tertiary-visited-outline-color-default: transparent;--ds-auro-hyperlink-cta-tertiary-visited-border-color-default: transparent;--ds-auro-hyperlink-cta-tertiary-focus-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-tertiary-focus-container-color-default: var(--ds-color-container-tertiary-default, rgba(0, 0, 0, 0.03));--ds-auro-hyperlink-cta-tertiary-focus-outline-color-default: var(--ds-color-border-ui-focus-default, #2c67b5);--ds-auro-hyperlink-cta-tertiary-focus-border-color-default: transparent;--ds-auro-hyperlink-cta-tertiary-hover-color-default: var(--ds-color-ui-default-default, #0074c8);--ds-auro-hyperlink-cta-tertiary-hover-container-color-default: var(--ds-color-container-ui-tertiary-hover-default, rgba(0, 0, 0, 0.12));--ds-auro-hyperlink-cta-tertiary-hover-outline-color-default: transparent;--ds-auro-hyperlink-cta-tertiary-hover-border-color-default: transparent;--ds-auro-hyperlink-cta-tertiary-default-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-cta-tertiary-default-container-color-inverse: var(--ds-color-container-ui-tertiary-default-inverse, rgba(255, 255, 255, 0.12));--ds-auro-hyperlink-cta-tertiary-default-outline-color-inverse: transparent;--ds-auro-hyperlink-cta-tertiary-default-border-color-inverse: transparent;--ds-auro-hyperlink-cta-tertiary-visited-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-cta-tertiary-visited-container-color-inverse: var(--ds-color-container-ui-tertiary-default-inverse, rgba(255, 255, 255, 0.12));--ds-auro-hyperlink-cta-tertiary-visited-outline-color-inverse: transparent;--ds-auro-hyperlink-cta-tertiary-visited-border-color-inverse: transparent;--ds-auro-hyperlink-cta-tertiary-focus-color-inverse: var(--ds-color-text-ui-default-inverse, #56bbde);--ds-auro-hyperlink-cta-tertiary-focus-container-color-inverse: var(--ds-color-container-ui-secondary-focus-inverse, rgba(255, 255, 255, 0.03));--ds-auro-hyperlink-cta-tertiary-focus-outline-color-inverse: var(--ds-color-border-ui-focus-inverse, #56bbde);--ds-auro-hyperlink-cta-tertiary-focus-border-color-inverse: transparent;--ds-auro-hyperlink-cta-tertiary-hover-color-inverse: var(--ds-color-text-ui-hover-inverse, #a8e9f7);--ds-auro-hyperlink-cta-tertiary-hover-container-color-inverse: var(--ds-color-container-ui-tertiary-hover-inverse, rgba(255, 255, 255, 0.25));--ds-auro-hyperlink-cta-tertiary-hover-outline-color-inverse: transparent;--ds-auro-hyperlink-cta-tertiary-hover-border-color-inverse: transparent}`;

// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.


// See https://git.io/JJ6SJ for "How to document your components using JSDoc"
/**
 * `<auro-hyperlink>` is a component that wraps an HTML `<a>` element, providing additional styling and behavior.
 *
 * @attr {Boolean} download - If true, the linked resource will be downloaded when the hyperlink is clicked.
 * @attr {Boolean} fluid - If true and `type="cta"`, the hyperlink will have a fluid-width UI.
 * @attr {Boolean} ondark - If true, the hyperlink will be styled for use on a dark background.
 * @attr {Boolean} relative - If true, the auto URL re-write feature will be disabled.
 * @attr {Boolean} secondary - If true and `type="cta"`, the hyperlink will have a secondary UI.
 * @attr {Boolean} tertiary - If true and `type="cta"`, the hyperlink will have a tertiary UI.
 * @attr {Boolean} small - If true and `type="cta"`, the hyperlink will have a small UI.
 * @attr {Boolean} referrerpolicy - If true, sets `strict-origin-when-cross-origin` to control the referrer information sent with requests.
 * @attr {String} rel - Defines the relationship between the current document and the linked document.
 * @attr {String} role - Defines ARIA roles; currently supports `button` for extended experiences.
 * @attr {String} href - Defines the URL of the linked page.
 * @attr {String} target - Defines where to open the linked document.
 * @attr {String} type - Defines the type of hyperlink; accepts `nav` or `cta`.
 * @csspart link - Allows styling to be applied to the `a` element.
 * @csspart targetIcon - Allows styling to be applied to the icon that appears next to the hyperlink.
 */

// build the component class
class AuroHyperlink extends ComponentBase {
  constructor() {
    super();

    const versioning = new AuroDependencyVersioning();

    /**
     * @private
     */
    this.iconTag = versioning.generateTag('auro-icon', iconVersion, AuroIcon);
  }

  // function to define props used within the scope of this component
  static get properties() {
    return {
      ...super.properties
    };
  }

  static get styles() {
    return [
      styleCss,
      colorCss,
      tokensCss
    ];
  }


  /**
   * This will register this element with the browser.
   * @param {string} [name="auro-hyperlink"] - The name of element that you want to register to.
   *
   * @example
   * AuroHyperlink.register("custom-hyperlink") // this will register this element to <custom-hyperlink/>
   *
   */
  static register(name = "auro-hyperlink") {
    AuroLibraryRuntimeUtils.default.prototype.registerComponent(name, AuroHyperlink);
  }

  /**
   * Generates an object containing CSS classes based on the properties of the component.
   *
   * @example
   * // Assuming this.safeUri = 'http://example.com', this.role = 'button', this.type = 'cta'
   * this.getMarkup(); // Returns { 'hyperlink': true, 'hyperlink--nav': false, 'hyperlink--ondark': false, 'hyperlink--button': true, 'hyperlink--cta': true, 'hyperlink--secondary': false }
   *
   * @example
   * // Assuming this.safeUri = '', this.role = '', this.type = 'nav', this.ondark = true, this.secondary = true
   * this.getMarkup(); // Returns { 'hyperlink': false, 'hyperlink--nav': true, 'hyperlink--ondark': true, 'hyperlink--button': false, 'hyperlink--cta': false, 'hyperlink--secondary': true }
   *
   * @private
   * @returns {object} An object containing CSS classes.
   */
  getMarkup() {
    const classes = {
      'hyperlink': this.safeUri || this.role,
      'hyperlink--nav': this.type === 'nav',
      'hyperlink--ondark': this.ondark,
      'hyperlink--button': this.role,
      'hyperlink--cta': this.type === 'cta',
      'hyperlink--secondary': this.secondary,
      'hyperlink--tertiary': this.tertiary
    };

    return html`
      ${this.safeUri || this.role ? html`
      <a
        part="link"
        aria-pressed="${ifDefined(this.role === 'button' ? this.ariaPressedState(this.ariaPressed) : undefined)}"
        class="${classMap(classes)}"
        href="${ifDefined(this.role ? undefined : this.safeUri)}"
        rel="${ifDefined(this.target || this.rel ? this.getRelType(this.target, this.rel) : undefined)}"
        referrerpolicy="${ifDefined(this.referrerpolicy ? this.defaultReferrerPolicy : undefined)}"
        role="${ifDefined(this.role === 'button' ? this.role : undefined)}"
        ?download="${this.download}"
        target="${ifDefined(this.target && this.includesDomain ? this.target : undefined)}"
        tabindex="${ifDefined(this.role === 'button' ? '0' : undefined)}"
      >
        <slot></slot>
        ${this.targetIcon(this.target, this.relative)}
      </a>`
      : html`<slot></slot>`}
    `;
  }
}

AuroHyperlink.register();

function initHyperlinkApiExamples(initCount) {
}

