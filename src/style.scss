// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license.
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

// general WCSS imports
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/breakpoints';
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/utilityMixins/anchor-roleButton';
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/core';
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/animation';

// Import Auro Sass variables
@import './../node_modules/@aurodesignsystem/design-tokens/dist/tokens/SCSSVariables';

/* stylelint-disable declaration-empty-line-before,
  no-descending-specificity,
  order/properties-order,
  selector-class-pattern,
  selector-max-class,
  selector-max-combinators,
  selector-max-compound-selectors */

:host {
  display: inline-block;
}

// applying a focus UI when using .focus()
:host([type='nav']) {
  .hyperlink {
    &:focus {
      text-decoration: underline;
    }
  }
}

// fill width of parent container when fluid=true and type='cta' (Call to action button)
:host([fluid][type='cta']),
:host([fluid='true'][type='cta']) {
  width: 100%;
  box-sizing: border-box;

  .hyperlink--cta {
    width: 100%;
    box-sizing: border-box;
  }
}

// component shape styles
.hyperlink {
  @include auro_transition(all, .15s, ease);

  text-decoration: underline;
  white-space: nowrap;

  @media (hover: hover) {
    &:hover {
      text-decoration: none;
    }

    &--nav {
      &:hover {
        text-decoration: underline;
      }
    }
  }

  // apply focus outline to inline hyperlinks that aren't CTA, nav, or button
  &:not(:is(.hyperlink--cta, .hyperlink--nav, .hyperlink--button)) {
    display: inline-block;
    border-radius: 3px;
    outline-offset: unset;
    outline-style: solid;
    outline-width: 1px;

    &:focus-visible {
      outline-offset: var(--ds-size-25, $ds-size-25);
    }
  }

  &--button {
    @include auro_anchorButton(css, noncomponent);
  }

  &--nav {
    display: block;
    text-decoration: none;

    &:focus-visible {
      outline-style: solid;
      outline-width: var(--ds-size-50, $ds-size-50);
      outline-offset: unset;
    }
  }

  &--cta {
    border-style: solid;
    border-width: 1px;
    border-radius: var(--ds-border-radius, $ds-border-radius);
    font-family: var(--ds-font-family-default, $ds-font-family-default);
    font-size: var(--ds-text-body-size-default, $ds-text-body-size-default);
    font-weight: var(--ds-text-body-default-weight, $ds-text-body-default-weight);

    min-height: var(--ds-size-600, $ds-size-600);
    max-height: var(--ds-size-600, $ds-size-600);

    text-align: center;

    vertical-align: middle;

    @include auro_anchorButton(css, noncomponent, block);

    &:active {
      transform: scale(.95);
    }

    &:focus-visible {
      outline-style: solid;
      outline-width: var(--ds-size-50, $ds-size-50);
      outline-offset: calc(-1 * (var(--ds-size-50, $ds-size-50) + var(--ds-size-25, $ds-size-25)));
    }

    &.hyperlink--secondary {
      outline-offset: calc(-1 * (var(--ds-size-50, $ds-size-50)));
    }

    &.hyperlink--tertiary {
      outline-offset: calc(-1 * (var(--ds-size-50, $ds-size-50)));
    }

    @media (hover: hover) {
      &:hover {
        text-decoration: none;
      }
    }

    @include auro_grid-breakpoint--sm {
      display: inline-block;

      min-width: 8.75rem;
      width: auto;

      padding: 0 var(--ds-size-300, $ds-size-300);
    }

    &.hyperlink--secondary,
    &.hyperlink--tertiary,
    &.hyperlink--ondark {
      border-style: solid;
      border-width: 1px;
    }
  }
}

:host([small][type='cta']),
:host([small='true'][type='cta']) {
  .hyperlink--cta {
    display: flex;

    min-width: unset;

    min-height: 2.25rem;
    max-height: 2.25rem;

    padding: var(--ds-size-100, $ds-size-100) var(--ds-size-200, $ds-size-200);

    line-height: var(--ds-unitless-scale-140, $ds-unitless-scale-140);

    font-size: var(--ds-text-body-size-sm, $ds-text-body-size-sm);

    svg {
      top: unset;
    }
  }
}

[auro-icon] {
  --ds-auro-icon-size: var(--ds-size-300, #{$ds-size-300});

  margin-left: var(--ds-size-25, $ds-size-25);
}
