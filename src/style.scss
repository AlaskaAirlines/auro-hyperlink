// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license.
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

// general WCSS imports
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/breakpoints';
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/utilityMixins/anchor-roleButton';
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/core';
@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/animation';

// Import Auro Sass variables
// Dependency required to process variables from Icons
@import './../node_modules/@aurodesignsystem/design-tokens/dist/tokens/SCSSVariables';

// Support for fallback values
@import './../node_modules/@aurodesignsystem/design-tokens/dist/tokens/SCSSVariables.scss';

// layout styles - define any layout specifications for UI that is contained WITHIN the component
// never define layout that would cause effect on element outside the scope of this component

/* stylelint-disable no-descending-specificity, selector-class-pattern, selector-max-class, declaration-empty-line-before, order/properties-order */

:host {
  display: inline-block;
}

// applying a focus UI when using .focus()
:host([type='nav']) {
  .hyperlink {
    &:focus {
      text-decoration: underline;
    }
  }
}

// fill width of parent container when fluid=true and type='cta' (Call to action button)
:host([fluid][type='cta']),
:host([fluid='true'][type='cta']) {
  width: 100%;

  .hyperlink--cta {
    width: 100%;
  }
}

// component shape styles
.hyperlink {
  @include auro_transition(all, .15s, ease);

  color: var(--ds-color-ui-default-default, $ds-color-ui-default-default);
  text-decoration: underline;

  // applying a focus UI when using .focus()
  &:focus {
    text-decoration: none;
  }

  &:visited {
    color: var(--ds-color-ui-default-default, $ds-color-ui-default-default);
  }

  &:focus-visible {
    background-color: var(--ds-color-ui-default-default, $ds-color-ui-default-default);
    color: var(--ds-color-text-primary-inverse, $ds-color-text-primary-inverse);
    outline: var(--ds-color-ui-default-default, $ds-color-ui-default-default) solid var(--ds-size-50, $ds-size-50);
    outline-offset: unset;

    &:hover {
      color: var(--ds-color-text-primary-inverse, $ds-color-text-primary-inverse);
    }
  }

  @media (hover: hover) {
    &:hover {
      color: var(--ds-color-ui-hover-default, $ds-color-ui-hover-default);
      text-decoration: none;
    }

    &--nav {
      &:hover {
        text-decoration: underline;
      }
    }

    &--ondark {
      &:hover {
        color: var(--ds-color-ui-hover-inverse, $ds-color-ui-hover-inverse);
      }
    }
  }

  &--button {
    @include auro_anchorButton(css, component);
  }

  &--nav {
    display: block;
    text-decoration: none;
  }

  &--cta {
    @include auro_anchorButton(css, component, block);

    border: 1px solid var(--ds-color-ui-default-default, $ds-color-ui-default-default);
    border-radius: var(--ds-border-radius, $ds-border-radius);
    background-color: var(--ds-color-ui-default-default, $ds-color-ui-default-default);
    color: var(--ds-color-text-primary-inverse, $ds-color-text-primary-inverse);
    font-family: var(--ds-font-family-default, $ds-font-family-default);
    font-size: var(--ds-text-body-size-default, $ds-text-body-size-default);
    font-weight: var(--ds-text-body-default-weight, $ds-text-body-default-weight);
    
    min-height: var(--ds-size-600, $ds-size-600);
    max-height: var(--ds-size-600, $ds-size-600);

    text-align: center;

    vertical-align: middle;


    &:active {
      transform: scale(.95);
    }

    // update to media query when ods-hyperlink support is removed
    :host(:not(.is-touching)) & {
      &:hover {
        border: 1px solid var(--ds-color-ui-hover-default, $ds-color-ui-hover-default);
        background-image: linear-gradient(var(--ds-color-ui-hover-default, $ds-color-ui-hover-default), var(--ds-color-ui-hover-default, $ds-color-ui-hover-default));
        color: var(--ds-color-text-primary-inverse, $ds-color-text-primary-inverse);
        text-decoration: none;
      }
    }

    &:visited {
      color: var(--ds-color-text-primary-inverse, $ds-color-text-primary-inverse);
    }

    @include auro_breakpoint--sm {
      display: inline-block;

      min-width: 8.75rem;
      width: auto;

      padding: 0 var(--ds-size-300, $ds-size-300);
    }

    &.hyperlink--secondary {
      border: 1px solid var(--ds-color-ui-default-default, $ds-color-ui-default-default);
      background-color: var(--ds-color-background-lightest, $ds-color-background-lightest);
      color: var(--ds-color-text-link-default, $ds-color-text-link-default);

      // update to media query when ods-hyperlink support is removed
      :host(:not(.is-touching)) & {
        &:hover {
          border: 1px solid var(--ds-color-ui-default-default, $ds-color-ui-default-default);
          background-image: linear-gradient(var(--ds-color-background-lighter, $ds-color-background-lighter), var(--ds-color-background-lighter, $ds-color-background-lighter));
          color: var(--ds-color-text-link-default, $ds-color-text-link-default);
        }
      }

      &.hyperlink--ondark {
        border: 1px solid var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);
        background-color: transparent;
        color: var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);

        // update to media query when ods-hyperlink support is removed
        :host(:not(.is-touching)) & {
          &:hover {
            border: 1px solid var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);
            background-image: linear-gradient(var(--ds-color-base-black-opacity-15, $ds-color-base-black-opacity-15), var(--ds-color-base-black-opacity-15, $ds-color-base-black-opacity-15));
            color: var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);
          }

          &:visited {
            color: var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);
          }
        }
      }
    }

    // CTA ondark
    &.hyperlink--ondark {
      border: 1px solid var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);
      background-color: var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);
      color: var(--ds-color-text-primary-default, $ds-color-text-primary-default);

      // update to media query when ods-hyperlink support is removed
      :host(:not(.is-touching)) & {
        &:hover {
          border: 1px solid var(--ds-color-ui-hover-inverse, $ds-color-ui-hover-inverse);
          background-image: linear-gradient(var(--ds-color-ui-hover-inverse, $ds-color-ui-hover-inverse), var(--ds-color-ui-hover-inverse, $ds-color-ui-hover-inverse));
          color: var(--ds-color-text-primary-default, $ds-color-text-primary-default);
        }

        &:visited {
          color: var(--ds-color-text-primary-default, $ds-color-text-primary-default);
        }
      }
    }
  }

  &--ondark {
    color: var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);

    &:visited {
      color: var(--ds-color-ui-default-inverse, $ds-color-ui-default-inverse);
    }
  }
}

:host([small][type='cta']),
:host([small='true'][type='cta']) {
  .hyperlink--cta {
    min-width: unset;

    min-height: 2.25rem;
    max-height: 2.25rem;

    padding: var(--ds-size-100, $ds-size-100) var(--ds-size-200, $ds-size-200);
  
    line-height: 1.3; // Arbitrary value to align the text vertically, matching auro-button 
    
    font-size: var(--ds-text-body-size-sm, $ds-text-body-size-sm);
  }
}

svg {
  // reset token value for localized use
  --auro-size-lg: 1rem;

  position: relative;
  top: 4px;
  margin-left: var(--ds-size-25, $ds-size-25);
}
